RCV_CURRENT_BALANCE = TOTAL_RCV + TOTAL_SALES
# artist share defined above
PAYOUT_A = ifelse(RCV_CURRENT_BALANCE > 0.0, ARTIST_SHARE*RCV_CURRENT_BALANCE, 0.0)
INCOME_TOWARDS_RECOUPABLES = ifelse(RCV_CURRENT_BALANCE > 0.0, RCV_CURRENT_BALANCE-ARTIST_SHARE*RCV_CURRENT_BALANCE, 0.0)
#previous period recoupables balance defined above
NEW_RCP <- costs_data %>%
filter(cost_type == "Recoupable") %>%
summarise(rcp_total = sum(`Credit (NZD)`) - sum(`Debit (NZD)`)) %>%
pull(rcp_total)
TOTAL_RCP = RCP_PREV_BALANCE + NEW_RCP
RCP_CURRENT_BALANCE = TOTAL_RCP + INCOME_TOWARDS_RECOUPABLES
PAYOUT_B = ifelse(RCP_CURRENT_BALANCE > 0.0, RCP_CURRENT_BALANCE, 0.0)
TOTAL_PAYOUT = PAYOUT_A + PAYOUT_B
TOTAL_SALES <- formattable::comma(TOTAL_SALES, digits=2, big.mark = "")
#RCV_PREV_BALANCE <- formattable::comma(RCV_PREV_BALANCE, digits=2, big.mark = "")
#NEW_RCV <-formatC(NEW_RCV,digits=2,format="f")
#TOTAL_RCV <-formatC(TOTAL_RCV,digits=2,format="f")
#RCV_CURRENT_BALANCE <-formatC(RCV_CURRENT_BALANCE,digits=2,format="f")
#PAYOUT_A <-formatC(PAYOUT_A,digits=2,format="f")
INCOME_TOWARDS_RECOUPABLES <- formattable::comma(INCOME_TOWARDS_RECOUPABLES, digits=2, big.mark = "")
ARTIST_SHARE <- formattable::percent(ARTIST_SHARE, digits=2, big.mark = "")
RCP_PREV_BALANCE <- formattable::comma(RCP_PREV_BALANCE, digits=2, big.mark = "")
#NEW_RCP <-formatC(NEW_RCP,digits=2,format="f")
#TOTAL_RCP <-formatC(TOTAL_RCP,digits=2,format="f")
#RCP_CURRENT_BALANCE <-formatC(RCP_CURRENT_BALANCE,digits=2,format="f")
#PAYOUT_B <- formattable::comma(PAYOUT_B, digits=2, big.mark = "")
TOTAL_PAYOUT <- formattable::comma(TOTAL_PAYOUT, digits=2, big.mark = "")
royalties_tbl = data.frame(Names = c("Total royalties"),
Values = c(TOTAL_SALES)
)
rcv_costs_tbl = data.frame(Names = c("Recoverable costs balance from previous period",
"New recoverable costs",
"Total recoverable costs"),
Values = c(RCV_PREV_BALANCE,
NEW_RCV,
TOTAL_RCV)
)
rcp_costs_tbl = data.frame(Names = c("Recoupable costs balance from previous period",
"New recoupable costs",
"Total recoupable costs"),
Values = c(RCP_PREV_BALANCE,
NEW_RCP,
TOTAL_RCP)
)
payout_a_tbl = data.frame(Names = c("Total royalties",
"Total recoverable costs",
"Surplus",
"Artist share",
"Arist payout A"),
Values = c(TOTAL_SALES,
TOTAL_RCV,
RCV_CURRENT_BALANCE,
percent(ARTIST_SHARE),
PAYOUT_A)
)
payout_b_tbl = data.frame(Names = c("Surplus towards recoupables",
"Total recoupable costs",
"Surplus",
"Artists Payout B"),
Values = c(INCOME_TOWARDS_RECOUPABLES,
TOTAL_RCP,
RCP_CURRENT_BALANCE,
PAYOUT_B)
)
total_payout_tbl = data.frame(Names = c("Total Payout (Payout A + Payout B)"),
Values = c(TOTAL_PAYOUT)
)
library(scales)
library(formattable)
TOTAL_SALES <- sum(royalties_data$artist_royalty_NZD)
#previous period recoverables balance defined above
NEW_RCV <- costs_data %>%
filter(cost_type != "Recoupable") %>%
summarise(rcv_total = sum(`Credit (NZD)`) - sum(`Debit (NZD)`)) %>%
pull(rcv_total)
TOTAL_RCV = RCV_PREV_BALANCE + NEW_RCV
RCV_CURRENT_BALANCE = TOTAL_RCV + TOTAL_SALES
# artist share defined above
PAYOUT_A = ifelse(RCV_CURRENT_BALANCE > 0.0, ARTIST_SHARE*RCV_CURRENT_BALANCE, 0.0)
INCOME_TOWARDS_RECOUPABLES = ifelse(RCV_CURRENT_BALANCE > 0.0, RCV_CURRENT_BALANCE-ARTIST_SHARE*RCV_CURRENT_BALANCE, 0.0)
#previous period recoupables balance defined above
NEW_RCP <- costs_data %>%
filter(cost_type == "Recoupable") %>%
summarise(rcp_total = sum(`Credit (NZD)`) - sum(`Debit (NZD)`)) %>%
pull(rcp_total)
TOTAL_RCP = RCP_PREV_BALANCE + NEW_RCP
RCP_CURRENT_BALANCE = TOTAL_RCP + INCOME_TOWARDS_RECOUPABLES
PAYOUT_B = ifelse(RCP_CURRENT_BALANCE > 0.0, RCP_CURRENT_BALANCE, 0.0)
TOTAL_PAYOUT = PAYOUT_A + PAYOUT_B
TOTAL_SALES <- formattable::comma(TOTAL_SALES, digits=2, big.mark = "")
#RCV_PREV_BALANCE <- formattable::comma(RCV_PREV_BALANCE, digits=2, big.mark = "")
#NEW_RCV <-formatC(NEW_RCV,digits=2,format="f")
#TOTAL_RCV <-formatC(TOTAL_RCV,digits=2,format="f")
#RCV_CURRENT_BALANCE <-formatC(RCV_CURRENT_BALANCE,digits=2,format="f")
#PAYOUT_A <-formatC(PAYOUT_A,digits=2,format="f")
INCOME_TOWARDS_RECOUPABLES <- formattable::comma(INCOME_TOWARDS_RECOUPABLES, digits=2, big.mark = "")
ARTIST_SHARE <- formattable::percent(ARTIST_SHARE, digits=0, big.mark = "")
RCP_PREV_BALANCE <- formattable::comma(RCP_PREV_BALANCE, digits=2, big.mark = "")
#NEW_RCP <-formatC(NEW_RCP,digits=2,format="f")
#TOTAL_RCP <-formatC(TOTAL_RCP,digits=2,format="f")
#RCP_CURRENT_BALANCE <-formatC(RCP_CURRENT_BALANCE,digits=2,format="f")
#PAYOUT_B <- formattable::comma(PAYOUT_B, digits=2, big.mark = "")
TOTAL_PAYOUT <- formattable::comma(TOTAL_PAYOUT, digits=2, big.mark = "")
royalties_tbl = data.frame(Names = c("Total royalties"),
Values = c(TOTAL_SALES)
)
rcv_costs_tbl = data.frame(Names = c("Recoverable costs balance from previous period",
"New recoverable costs",
"Total recoverable costs"),
Values = c(RCV_PREV_BALANCE,
NEW_RCV,
TOTAL_RCV)
)
rcp_costs_tbl = data.frame(Names = c("Recoupable costs balance from previous period",
"New recoupable costs",
"Total recoupable costs"),
Values = c(RCP_PREV_BALANCE,
NEW_RCP,
TOTAL_RCP)
)
payout_a_tbl = data.frame(Names = c("Total royalties",
"Total recoverable costs",
"Surplus",
"Artist share",
"Arist payout A"),
Values = c(TOTAL_SALES,
TOTAL_RCV,
RCV_CURRENT_BALANCE,
percent(ARTIST_SHARE),
PAYOUT_A)
)
payout_b_tbl = data.frame(Names = c("Surplus towards recoupables",
"Total recoupable costs",
"Surplus",
"Artists Payout B"),
Values = c(INCOME_TOWARDS_RECOUPABLES,
TOTAL_RCP,
RCP_CURRENT_BALANCE,
PAYOUT_B)
)
total_payout_tbl = data.frame(Names = c("Total Payout (Payout A + Payout B)"),
Values = c(TOTAL_PAYOUT)
)
payout_a_tbl
ARTIST_SHARE
library(scales)
library(formattable)
TOTAL_SALES <- sum(royalties_data$artist_royalty_NZD)
#previous period recoverables balance defined above
NEW_RCV <- costs_data %>%
filter(cost_type != "Recoupable") %>%
summarise(rcv_total = sum(`Credit (NZD)`) - sum(`Debit (NZD)`)) %>%
pull(rcv_total)
TOTAL_RCV = RCV_PREV_BALANCE + NEW_RCV
RCV_CURRENT_BALANCE = TOTAL_RCV + TOTAL_SALES
# artist share defined above
PAYOUT_A = ifelse(RCV_CURRENT_BALANCE > 0.0, ARTIST_SHARE*RCV_CURRENT_BALANCE, 0.0)
INCOME_TOWARDS_RECOUPABLES = ifelse(RCV_CURRENT_BALANCE > 0.0, RCV_CURRENT_BALANCE-ARTIST_SHARE*RCV_CURRENT_BALANCE, 0.0)
#previous period recoupables balance defined above
NEW_RCP <- costs_data %>%
filter(cost_type == "Recoupable") %>%
summarise(rcp_total = sum(`Credit (NZD)`) - sum(`Debit (NZD)`)) %>%
pull(rcp_total)
TOTAL_RCP = RCP_PREV_BALANCE + NEW_RCP
RCP_CURRENT_BALANCE = TOTAL_RCP + INCOME_TOWARDS_RECOUPABLES
PAYOUT_B = ifelse(RCP_CURRENT_BALANCE > 0.0, RCP_CURRENT_BALANCE, 0.0)
TOTAL_PAYOUT = PAYOUT_A + PAYOUT_B
TOTAL_SALES <- formattable::comma(TOTAL_SALES, digits=2, big.mark = "")
#RCV_PREV_BALANCE <- formattable::comma(RCV_PREV_BALANCE, digits=2, big.mark = "")
#NEW_RCV <-formatC(NEW_RCV,digits=2,format="f")
#TOTAL_RCV <-formatC(TOTAL_RCV,digits=2,format="f")
#RCV_CURRENT_BALANCE <-formatC(RCV_CURRENT_BALANCE,digits=2,format="f")
#PAYOUT_A <-formatC(PAYOUT_A,digits=2,format="f")
INCOME_TOWARDS_RECOUPABLES <- formattable::comma(INCOME_TOWARDS_RECOUPABLES, digits=2, big.mark = "")
ARTIST_SHARE <- formattable::percent(ARTIST_SHARE, digits=0, big.mark = "")
RCP_PREV_BALANCE <- formattable::comma(RCP_PREV_BALANCE, digits=2, big.mark = "")
#NEW_RCP <-formatC(NEW_RCP,digits=2,format="f")
#TOTAL_RCP <-formatC(TOTAL_RCP,digits=2,format="f")
#RCP_CURRENT_BALANCE <-formatC(RCP_CURRENT_BALANCE,digits=2,format="f")
#PAYOUT_B <- formattable::comma(PAYOUT_B, digits=2, big.mark = "")
TOTAL_PAYOUT <- formattable::comma(TOTAL_PAYOUT, digits=2, big.mark = "")
royalties_tbl = data.frame(Names = c("Total royalties"),
Values = c(TOTAL_SALES)
)
rcv_costs_tbl = data.frame(Names = c("Recoverable costs balance from previous period",
"New recoverable costs",
"Total recoverable costs"),
Values = c(RCV_PREV_BALANCE,
NEW_RCV,
TOTAL_RCV)
)
rcp_costs_tbl = data.frame(Names = c("Recoupable costs balance from previous period",
"New recoupable costs",
"Total recoupable costs"),
Values = c(RCP_PREV_BALANCE,
NEW_RCP,
TOTAL_RCP)
)
payout_a_tbl = data.frame(Names = c("Total royalties",
"Total recoverable costs",
"Surplus",
"Artist share",
"Arist payout A"),
Values = c(TOTAL_SALES,
TOTAL_RCV,
RCV_CURRENT_BALANCE,
ARTIST_SHARE,
PAYOUT_A)
)
payout_b_tbl = data.frame(Names = c("Surplus towards recoupables",
"Total recoupable costs",
"Surplus",
"Artists Payout B"),
Values = c(INCOME_TOWARDS_RECOUPABLES,
TOTAL_RCP,
RCP_CURRENT_BALANCE,
PAYOUT_B)
)
total_payout_tbl = data.frame(Names = c("Total Payout (Payout A + Payout B)"),
Values = c(TOTAL_PAYOUT)
)
payout_a_tbl
library(scales)
library(formattable)
TOTAL_SALES <- sum(royalties_data$artist_royalty_NZD)
#previous period recoverables balance defined above
NEW_RCV <- costs_data %>%
filter(cost_type != "Recoupable") %>%
summarise(rcv_total = sum(`Credit (NZD)`) - sum(`Debit (NZD)`)) %>%
pull(rcv_total)
TOTAL_RCV = RCV_PREV_BALANCE + NEW_RCV
RCV_CURRENT_BALANCE = TOTAL_RCV + TOTAL_SALES
# artist share defined above
PAYOUT_A = ifelse(RCV_CURRENT_BALANCE > 0.0, ARTIST_SHARE*RCV_CURRENT_BALANCE, 0.0)
INCOME_TOWARDS_RECOUPABLES = ifelse(RCV_CURRENT_BALANCE > 0.0, RCV_CURRENT_BALANCE-ARTIST_SHARE*RCV_CURRENT_BALANCE, 0.0)
#previous period recoupables balance defined above
NEW_RCP <- costs_data %>%
filter(cost_type == "Recoupable") %>%
summarise(rcp_total = sum(`Credit (NZD)`) - sum(`Debit (NZD)`)) %>%
pull(rcp_total)
TOTAL_RCP = RCP_PREV_BALANCE + NEW_RCP
RCP_CURRENT_BALANCE = TOTAL_RCP + INCOME_TOWARDS_RECOUPABLES
PAYOUT_B = ifelse(RCP_CURRENT_BALANCE > 0.0, RCP_CURRENT_BALANCE, 0.0)
TOTAL_PAYOUT = PAYOUT_A + PAYOUT_B
TOTAL_SALES <- formattable::comma(TOTAL_SALES, digits=2, big.mark = "")
RCV_PREV_BALANCE <- formattable::comma(RCV_PREV_BALANCE, digits=2, big.mark = "")
NEW_RCV <- formattable::comma(NEW_RCV, digits=2, big.mark = "")
TOTAL_RCV <- formattable::comma(TOTAL_RCV, digits=2, big.mark = "")
RCV_CURRENT_BALANCE <- formattable::comma(RCV_CURRENT_BALANCE, digits=2, big.mark = "")
PAYOUT_A <- formattable::comma(PAYOUT_A, digits=2, big.mark = "")
INCOME_TOWARDS_RECOUPABLES <- formattable::comma(INCOME_TOWARDS_RECOUPABLES, digits=2, big.mark = "")
ARTIST_SHARE <- formattable::percent(ARTIST_SHARE, digits=0, big.mark = "")
RCP_PREV_BALANCE <- formattable::comma(RCP_PREV_BALANCE, digits=2, big.mark = "")
NEW_RCP <- formattable::comma(NEW_RCP, digits=2, big.mark = "")
TOTAL_RCP <- formattable::comma(TOTAL_RCP, digits=2, big.mark = "")
RCP_CURRENT_BALANCE <- formattable::comma(RCP_CURRENT_BALANCE, digits=2, big.mark = "")
PAYOUT_B <- formattable::comma(PAYOUT_B, digits=2, big.mark = "")
TOTAL_PAYOUT <- formattable::comma(TOTAL_PAYOUT, digits=2, big.mark = "")
royalties_tbl = data.frame(Names = c("Total royalties"),
Values = c(TOTAL_SALES)
)
rcv_costs_tbl = data.frame(Names = c("Recoverable costs balance from previous period",
"New recoverable costs",
"Total recoverable costs"),
Values = c(RCV_PREV_BALANCE,
NEW_RCV,
TOTAL_RCV)
)
rcp_costs_tbl = data.frame(Names = c("Recoupable costs balance from previous period",
"New recoupable costs",
"Total recoupable costs"),
Values = c(RCP_PREV_BALANCE,
NEW_RCP,
TOTAL_RCP)
)
payout_a_tbl = data.frame(Names = c("Total royalties",
"Total recoverable costs",
"Surplus",
"Artist share",
"Arist payout A"),
Values = c(TOTAL_SALES,
TOTAL_RCV,
RCV_CURRENT_BALANCE,
ARTIST_SHARE,
PAYOUT_A)
)
payout_b_tbl = data.frame(Names = c("Surplus towards recoupables",
"Total recoupable costs",
"Surplus",
"Artists Payout B"),
Values = c(INCOME_TOWARDS_RECOUPABLES,
TOTAL_RCP,
RCP_CURRENT_BALANCE,
PAYOUT_B)
)
total_payout_tbl = data.frame(Names = c("Total Payout (Payout A + Payout B)"),
Values = c(TOTAL_PAYOUT)
)
payout_a_tbl
class(TOTAL_SALES)
# Create a data frame with a mixed data type column
df <- data.frame(
ID = 1:3,
MixedColumn = list("text", 123, c(1.5, 2.0, 3.5))
)
# Print the data frame
print(df)
library(scales)
library(formattable)
TOTAL_SALES <- sum(royalties_data$artist_royalty_NZD)
#previous period recoverables balance defined above
NEW_RCV <- costs_data %>%
filter(cost_type != "Recoupable") %>%
summarise(rcv_total = sum(`Credit (NZD)`) - sum(`Debit (NZD)`)) %>%
pull(rcv_total)
TOTAL_RCV = RCV_PREV_BALANCE + NEW_RCV
RCV_CURRENT_BALANCE = TOTAL_RCV + TOTAL_SALES
# artist share defined above
PAYOUT_A = ifelse(RCV_CURRENT_BALANCE > 0.0, ARTIST_SHARE*RCV_CURRENT_BALANCE, 0.0)
INCOME_TOWARDS_RECOUPABLES = ifelse(RCV_CURRENT_BALANCE > 0.0, RCV_CURRENT_BALANCE-ARTIST_SHARE*RCV_CURRENT_BALANCE, 0.0)
#previous period recoupables balance defined above
NEW_RCP <- costs_data %>%
filter(cost_type == "Recoupable") %>%
summarise(rcp_total = sum(`Credit (NZD)`) - sum(`Debit (NZD)`)) %>%
pull(rcp_total)
TOTAL_RCP = RCP_PREV_BALANCE + NEW_RCP
RCP_CURRENT_BALANCE = TOTAL_RCP + INCOME_TOWARDS_RECOUPABLES
PAYOUT_B = ifelse(RCP_CURRENT_BALANCE > 0.0, RCP_CURRENT_BALANCE, 0.0)
TOTAL_PAYOUT = PAYOUT_A + PAYOUT_B
TOTAL_SALES <- formattable::comma(TOTAL_SALES, digits=2, big.mark = "")
RCV_PREV_BALANCE <- formattable::comma(RCV_PREV_BALANCE, digits=2, big.mark = "")
NEW_RCV <- formattable::comma(NEW_RCV, digits=2, big.mark = "")
TOTAL_RCV <- formattable::comma(TOTAL_RCV, digits=2, big.mark = "")
RCV_CURRENT_BALANCE <- formattable::comma(RCV_CURRENT_BALANCE, digits=2, big.mark = "")
PAYOUT_A <- formattable::comma(PAYOUT_A, digits=2, big.mark = "")
INCOME_TOWARDS_RECOUPABLES <- formattable::comma(INCOME_TOWARDS_RECOUPABLES, digits=2, big.mark = "")
ARTIST_SHARE <- formattable::percent(ARTIST_SHARE, digits=0, big.mark = "")
RCP_PREV_BALANCE <- formattable::comma(RCP_PREV_BALANCE, digits=2, big.mark = "")
NEW_RCP <- formattable::comma(NEW_RCP, digits=2, big.mark = "")
TOTAL_RCP <- formattable::comma(TOTAL_RCP, digits=2, big.mark = "")
RCP_CURRENT_BALANCE <- formattable::comma(RCP_CURRENT_BALANCE, digits=2, big.mark = "")
PAYOUT_B <- formattable::comma(PAYOUT_B, digits=2, big.mark = "")
TOTAL_PAYOUT <- formattable::comma(TOTAL_PAYOUT, digits=2, big.mark = "")
royalties_tbl = data.frame(Names = c("Total royalties"),
Values = c(
formattable::comma(TOTAL_SALES, digits=2, big.mark = "")
)
)
rcv_costs_tbl = data.frame(Names = c("Recoverable costs balance from previous period",
"New recoverable costs",
"Total recoverable costs"),
Values = c(
formattable::comma(RCV_PREV_BALANCE, digits=2, big.mark = ""),
formattable::comma(NEW_RCV, digits=2, big.mark = ""),
formattable::comma(TOTAL_RCV, digits=2, big.mark = "")
)
)
rcp_costs_tbl = data.frame(Names = c("Recoupable costs balance from previous period",
"New recoupable costs",
"Total recoupable costs"),
Values = c(RCP_PREV_BALANCE,
NEW_RCP,
TOTAL_RCP)
)
payout_a_tbl = data.frame(Names = list("Total royalties",
"Total recoverable costs",
"Surplus",
"Artist share",
"Arist payout A"),
Vals = list(formattable::comma(TOTAL_SALES, digits=2, big.mark = ""),
formattable::comma(TOTAL_RCV, digits=2, big.mark = ""),
formattable::comma(RCV_CURRENT_BALANCE, digits=2, big.mark = ""),
formattable::percent(ARTIST_SHARE, digits=0, big.mark = ""),
formattable::comma(PAYOUT_A, digits=2, big.mark = "")
)
)
payout_b_tbl = data.frame(Names = c("Surplus towards recoupables",
"Total recoupable costs",
"Surplus",
"Artists Payout B"),
Values = c(INCOME_TOWARDS_RECOUPABLES,
TOTAL_RCP,
RCP_CURRENT_BALANCE,
PAYOUT_B)
)
total_payout_tbl = data.frame(Names = c("Total Payout (Payout A + Payout B)"),
Values = c(TOTAL_PAYOUT)
)
payout_a_tbl
payout_a_tbl = data.frame(Names = c("Total royalties",
"Total recoverable costs",
"Surplus",
"Artist share",
"Arist payout A"),
Vals = list(formattable::comma(TOTAL_SALES, digits=2, big.mark = ""),
formattable::comma(TOTAL_RCV, digits=2, big.mark = ""),
formattable::comma(RCV_CURRENT_BALANCE, digits=2, big.mark = ""),
formattable::percent(ARTIST_SHARE, digits=0, big.mark = ""),
formattable::comma(PAYOUT_A, digits=2, big.mark = "")
)
)
payout_a_tbl <- data.frame(
Names = c(
"Total royalties",
"Total recoverable costs",
"Surplus",
"Artist share",
"Arist payout A"
),
Vals = list(
formattable::comma(TOTAL_SALES, digits = 2, big.mark = ""),
formattable::comma(TOTAL_RCV, digits = 2, big.mark = ""),
formattable::comma(RCV_CURRENT_BALANCE, digits = 2, big.mark = ""),
formattable::percent(ARTIST_SHARE, digits = 0, big.mark = ""),
formattable::comma(PAYOUT_A, digits = 2, big.mark = "")
)
)
payout_a_tbl <- data.frame(
Names = c(
"Total royalties",
"Total recoverable costs",
"Surplus",
"Artist share",
"Artist payout A"
),
Vals = list(
formattable::comma(TOTAL_SALES, digits = 2, big.mark = ""),
formattable::comma(TOTAL_RCV, digits = 2, big.mark = ""),
formattable::comma(RCV_CURRENT_BALANCE, digits = 2, big.mark = ""),
as.numeric(ARTIST_SHARE),  # Assuming ARTIST_SHARE is a numeric value
formattable::comma(PAYOUT_A, digits = 2, big.mark = "")
)
)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
install.packages("here")
library(here)
sparta_file_path <- here("Sparta Reporting")
print(sparta_file_path)
sparta_filepath_2 <- here("Sparta Reporting/new_layout")
print(sparta_filepath_2)
universal_file_path <- here("Universal Reporting")
print(universal_file_path)
setwd(sparta_file_path)
files <- list.files(pattern = ".csv")
#print(files)
sparta_data <- data.frame()
for (file in files) {
data <- read.csv(file, header = TRUE)
data <- data[, 1:15]
#print(paste(file, ncol(data)))
sparta_data <- rbind(sparta_data, data)
}
sparta_data
install.packages("dplyr")
library(dplyr)
library(flexdashboard)
library(tidyverse)
library(highcharter)
library(gt)
library(htmltools)
library(viridis)
royalties_data <- read_csv('aacacia_royalties_cleaned.csv', show_col_types = FALSE)
costs_data <- read_csv('aacacia_costs_cleaned.csv', show_col_types = FALSE)
#previous period balances
RCV_PREV_BALANCE <- 0.00
RCP_PREV_BALANCE <- 0.00
ARTIST_SHARE <- 0.50 ## this is the percent that the artist takes from the total sales - recoverable costs
costs_data
unique(costs_data$cost_type)
royalties_data <- read_csv('aacacia_royalties_cleaned.csv', show_col_types = FALSE)
costs_data <- read_csv('aacacia_costs_cleaned.csv', show_col_types = FALSE)
costs_data <- subset(costs_data, costs_data$cost_type != "Management Fees")
#previous period balances
RCV_PREV_BALANCE <- 0.00
RCP_PREV_BALANCE <- 0.00
ARTIST_SHARE <- 0.50 ## this is the percent that the artist takes from the total sales - recoverable costs
unique(costs_data$cost_type)
getwd()
setwd("/Users/tyaansingh/Documents/Data Analyst Projects/Analysis of Female Directors in Oscar Awards")
getwd()
install(feather-format)
install.packages("feather")
source("~/Documents/Data Analyst Projects/Analysis of Female Directors in Oscar Awards/shiny-app/scripts/letterboxd-data-2.R")
df_films <- readRDS("~/Documents/Data Analyst Projects/Analysis of Female Directors in Oscar Awards/shiny-app/data/film-dataframe.rds")
source("~/Documents/Data Analyst Projects/Analysis of Female Directors in Oscar Awards/shiny-app/scripts/letterboxd-data-2.R")
install.packages("arrow")
source("~/Documents/Data Analyst Projects/Analysis of Female Directors in Oscar Awards/shiny-app/scripts/letterboxd-data-2.R")
source("~/Documents/Data Analyst Projects/Analysis of Female Directors in Oscar Awards/shiny-app/scripts/letterboxd-data.R")
shiny::runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
View(df_directors)
runApp('shiny-app')
runApp('shiny-app')
